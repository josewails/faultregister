# Generated by Django 2.1.9 on 2019-06-17 18:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='FaultSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='IssueDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_or_assembly_image', models.URLField(null=True)),
                ('part_or_assembly_detail', models.URLField(null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('accurate_description', models.TextField(blank=True, null=True)),
                ('exact_description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MachineClassification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='MachineType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationRecipient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Originator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=256)),
                ('last_name', models.CharField(blank=True, max_length=256, null=True)),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='submissions.Area')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_id', models.CharField(max_length=64)),
                ('machine_shop_update', models.DateTimeField(null=True)),
                ('quality_update', models.DateTimeField(null=True)),
                ('stores_update', models.DateTimeField(null=True)),
                ('cs_stores_update', models.DateTimeField(null=True)),
                ('time_to_close', models.FloatField(null=True)),
                ('time_in_quality', models.FloatField(blank=True, null=True)),
                ('time_in_stores', models.FloatField(blank=True, null=True)),
                ('time_in_cs_stores', models.FloatField(blank=True, null=True)),
                ('qr_code', models.CharField(blank=True, max_length=64, null=True)),
                ('input_start_date', models.DateTimeField(blank=True, null=True)),
                ('part_number', models.CharField(blank=True, max_length=256, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('total_part_cost', models.FloatField(blank=True, null=True)),
                ('order_number', models.IntegerField(blank=True, null=True)),
                ('rework_quantity', models.IntegerField(blank=True, null=True)),
                ('scrap_quantity', models.IntegerField(blank=True, null=True)),
                ('stock_quantity', models.IntegerField(blank=True, null=True)),
                ('to_be_reworked_on_site', models.BooleanField(blank=True, null=True)),
                ('part_description', models.TextField(blank=True, null=True)),
                ('bin_number', models.CharField(blank=True, max_length=64, null=True)),
                ('unit_part_cost', models.FloatField(blank=True, null=True)),
                ('total_ncr_cost', models.FloatField(blank=True, null=True)),
                ('production_order_number', models.CharField(blank=True, max_length=64, null=True)),
                ('machine_number', models.CharField(blank=True, max_length=64, null=True)),
                ('vendor_id', models.CharField(blank=True, max_length=64, null=True)),
                ('sap_updated', models.BooleanField(blank=True, null=True)),
                ('rework_time', models.FloatField(blank=True, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=64, null=True)),
                ('create_an_ncr', models.BooleanField(blank=True, null=True)),
                ('caq_ncr', models.CharField(blank=True, max_length=256)),
                ('minutes_wasted', models.IntegerField(blank=True, null=True)),
                ('remark', models.CharField(blank=True, max_length=256, null=True)),
                ('eight_d_requested', models.BooleanField(blank=True, null=True)),
                ('eight_d_supplied', models.BooleanField(blank=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=128, null=True)),
                ('classification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submissions', to='submissions.Classification')),
                ('current_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_area_submissions', to='submissions.Area')),
                ('defect_origin_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='defect_submissions', to='submissions.Area')),
                ('fault_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submissions', to='submissions.FaultSource')),
                ('issue_details', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submissions', to='submissions.IssueDetails')),
                ('machine_classification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='submissions.MachineClassification')),
                ('machine_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='submissions.MachineType')),
                ('notification_recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submissions', to='submissions.NotificationRecipient')),
                ('originator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submissions', to='submissions.Originator')),
                ('previous_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previous_area_submissions', to='submissions.Area')),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionProgress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Supervisor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('email', models.EmailField(max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('email', models.EmailField(max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.AddField(
            model_name='submission',
            name='progress',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submissions', to='submissions.SubmissionProgress'),
        ),
        migrations.AddField(
            model_name='submission',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='defect_submissions', to='submissions.SubmissionStatus'),
        ),
        migrations.AddField(
            model_name='submission',
            name='supervisor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submissions', to='submissions.Supervisor'),
        ),
        migrations.AddField(
            model_name='submission',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submissions', to='submissions.Supplier'),
        ),
        migrations.AddField(
            model_name='submission',
            name='test_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='submissions.TestType'),
        ),
    ]
